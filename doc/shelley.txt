*shelley*	Further integrate your shell into neovim

Version 0.1

Introduction		|shelley-introduction|
Setup			|shelley-setup|
shelley-promptsave	|shelley-promptsave|
shelley-textobj		|shelley-textobj|

==============================================================================
INTRODUCTION					*shelley-introduction*

Shelley provides functions to navigate between shell prompts in the host's terminal
buffer and text-objects to select commands and their output.

Shelley currently only works with zsh.

==============================================================================
SETUP						*shelley-setup*
First, make sure that neovim-python3 is installed (you can either install it
through pip or through your distro's package manager). Then, install shelley as
you would a regular plugin. The last step is to add the following line to your
.zshrc:
>
	source PATH/TO/SHELLEY/sh/shelley.sh
<
						*shelley-saveprompt*
Shelley saves the location of your prompt in the terminal buffer. It then
provides two functions, 'shelley#PrevPrompt()' and 'shelley#NextPrompt()' to
navigate between the prompts. Shelley doesn't provide any binding by default
so you have to define them, for example like this:
>
	nnoremap <expr> <Space>p shelley#PrevPrompt()
	nnoremap <expr> <Space>n shelley#NextPrompt()
	vnoremap <expr> <Space>p shelley#PrevPrompt()
	vnoremap <expr> <Space>n shelley#NextPrompt()
<
						*shelley-textobj*
If the vim-textobj-user plugin is installed, shelley will automatically create
a 'command' text object and bind it to 'o'. You will then be able to use the
regular text object functions to interact with the output of your shell.
Here's an example.
>
	PS1>cat <<EOF
	This is a test
	EOF
	PS1>
<
You can select the output of cat by typing "vio". If you wanted to select
both the command and its output, you can use "vao" instead.

==============================================================================
vim:tw=78:ts=8:ft=help:norl:fen:fdl=0:fdm=marker:noet:
